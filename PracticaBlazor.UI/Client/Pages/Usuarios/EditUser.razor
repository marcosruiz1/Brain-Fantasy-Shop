@page "/usuario/edit/{id:int}"
@using PracticaBlazor.UI.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container ">
    <h1>EDITAR USUARIO</h1>

    @if (_usuario == null)
    {
        <div id="app" class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <EditForm Model="@_usuario" OnValidSubmit="Put">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Usuario: </label>
                <InputText class="inputPersonalizado" @bind-Value="_usuario.Username" />
            </div>
            <div class="form-group">
                <label>Rol: </label>
                <InputSelect class="inputPersonalizado" @bind-Value="Rol">
                    @foreach (var rol in _roles)
                    {
                    <option value="@rol">@rol.ToString()</option>
                    }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Email: </label>
            <InputText class="inputPersonalizado" @bind-Value="_usuario.Email" />
        </div>
        <div class="form-group">
            <label>Nombre: </label>
            <InputText class="inputPersonalizado" @bind-Value="_usuario.Nombre" />
        </div>
        <div class="form-group">
            <label>Apellidos: </label>
            <InputText class="inputPersonalizado" @bind-Value="_usuario.Apellidos" />
        </div>
        <div class="form-group">
            <label>Direccion: </label>
            <InputText class="inputPersonalizado" @bind-Value="_usuario.Direccion" />
        </div>
        <div class="form-group">
            <label>Telefono: </label>
            <InputText class="inputPersonalizado" @bind-Value="_usuario.Telefono" />
        </div>

        <div class="form-group">
            <label>Imagen: </label><br>
            @if (@_usuario.Imagen == "default_User_Img")
                {
                    <img src="/images/default_User_Img.png" style="width: 450px; height: 400px; margin-bottom:10px;">

                }
                else
                {
                    <img src="@_usuario.Imagen" style="width: 450px; height: 400px; margin-bottom:10px;">
                }

                <InputFile OnChange="@OnFileChange" multiple="false" accept="images/jpeg" />
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-success" value="Editar Usuario" />
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private Usuario _usuario;
    private string Rol { get; set; }
    private List<string> _roles = new() { "ROLE_VISUALIZAR", "ROLE_COMPLETO", "ROLE_ADMIN" };


    protected override async Task OnInitializedAsync()
    {
        _usuario = await Http.GetFromJsonAsync<Usuario>($"/api/Usuarios/{Id}");
        _usuario.ConfirmPassword = _usuario.Password;
    }
    private async Task Put()
    {
        _usuario.Rol = Rol;
        await Http.PutAsJsonAsync<Usuario>($"/api/Usuarios/{_usuario.Id}", _usuario);
        Navigation.NavigateTo("/usuarios/admin");
    }

    private async Task OnFileChange(InputFileChangeEventArgs ev)
    {
        //get the file
        var file = ev.File;

        //read that file in a byte array
        var buffer = new byte[file.Size];
        await file.OpenReadStream(1512000).ReadAsync(buffer);

        //convert byte array to base 64 string
        _usuario.Imagen = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }

}
