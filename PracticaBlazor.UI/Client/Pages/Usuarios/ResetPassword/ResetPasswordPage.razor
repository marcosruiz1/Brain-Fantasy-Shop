@page "/Account/reset-password"
@using Microsoft.AspNetCore.WebUtilities
@using PracticaBlazor.UI.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IToastService toastService

<h3>ResetPassword</h3>

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@_resetPassword" OnValidSubmit="ResetPassword">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label  class="control-label">Password</label>
                <InputText @bind-Value="_resetPassword.Password" class="form-control" />
            </div>
            <div class="form-group">
                <label  class="control-label">ConfirmPassword</label>
                <InputText @bind-Value="_resetPassword.ConfirmPassword" class="form-control" />
            </div>
            <InputText type="hidden" @bind-Value="_resetPassword.Token" class="form-control" />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </EditForm>
    </div>
</div>

@code {
    private ResetPassword _resetPassword = new();
    private string token;

    protected override async Task OnInitializedAsync()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var _token))
        {
            token = _token;
        }
        _resetPassword.Token = token;
    }

    public async Task ResetPassword()
    {

        var respuesta = await Http.PostAsJsonAsync<ResetPassword>("/api/Auth/resetPassword", _resetPassword);
        if(!respuesta.IsSuccessStatusCode)
        {
            toastService.ShowError("Token incorrecto");
        }
        else
        {
           Navigation.NavigateTo("/login"); 
        }
        
    }
}
