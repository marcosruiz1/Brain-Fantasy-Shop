@page "/usuario/edit/{id:int}"
@using PracticaBlazor.UI.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container ">
<h3>Edit User</h3>

@if (_usuario == null)
{
    <div id="app" class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <EditForm Model="@_usuario" OnValidSubmit="Put">
        <div class="form-group">
            <label>Usuario: </label>
            <InputText class="form-control" @bind-Value="_usuario.Username" />
        </div>
        <div class="form-group">
            <label>Rol: </label>
            <InputSelect class="form-control" @bind-Value="_usuario.Rol">
                @foreach (var rol in _roles)
                {
                <option value="@rol">@rol.ToString()</option>
                }
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Email: </label>
        <InputText class="form-control" @bind-Value="_usuario.Email" />
    </div>

    <div class="form-group">
        <label>Imagen: </label>
        <InputText class="form-control" @bind-Value="_usuario.Imagen" />
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-success" value="Editar Usuario" />
    </div>
</EditForm>
}
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private Usuario _usuario;
    private List<string> _roles = new() { "ROLE_VISUALIZAR", "ROLE_COMPLETO", "ROLE_ADMIN" };


    protected override async Task OnInitializedAsync()
    {
        _usuario = await Http.GetFromJsonAsync<Usuario>($"/api/Usuarios/{Id}");
        _usuario.ConfirmPassword = _usuario.Password;
    }
    private async Task Put()
    {
        await Http.PutAsJsonAsync<Usuario>($"/api/Usuarios/{_usuario.Id}", _usuario);
        Navigation.NavigateTo("/usuarios/admin");
    }

}
