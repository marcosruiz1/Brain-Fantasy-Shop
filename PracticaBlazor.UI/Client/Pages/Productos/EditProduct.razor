@page "/producto/edit/{id:int}"
@using PracticaBlazor.UI.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container ">
    <h1>EDITAR PRODUCTO</h1>

    @if (_producto == null)
    {
        <div id="app" class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <EditForm Context="Main" Model="@_producto" OnValidSubmit="Put">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Nombre: </label>
                <InputText class="inputPersonalizado" @bind-Value="_producto.Nombre" />
            </div>
            <div class="form-group">
                <label>Categoria: </label>
                <InputSelect class="inputPersonalizado" @bind-Value="_producto.Categoria">
                    @foreach (var cat in _categorias)
                    {
                    <option value="@cat.Id">@cat.Nombre</option>
                    }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Precio: </label>
            <InputNumber class="inputPersonalizado" @bind-Value="_producto.Precio" />
        </div>
        <div class="form-group">
            <label>Descripcion</label>
            <InputTextArea class="inputPersonalizado" @bind-Value="_producto.Descripcion" />
        </div>

        <div class="form-group">
            <label>Imagen: </label><br>
            <img src="@_producto.Imagen" style="width: 450px; height: 400px; margin-bottom:10px;">
            <InputFile OnChange="@OnFileChange" multiple="false" accept="images/jpeg" />          
        </div>

        <div class="form-group">
            <input type="submit" class="btn btn-success" style="margin-top:15px;" value="Editar producto" />
        </div>
    </EditForm>
    }
</div>


@code {
    [Parameter]
    public int Id { get; set; }
    private Producto _producto;
    private List<Categoria> _categorias = new();


    protected override async Task OnInitializedAsync()
    {
        _producto = await Http.GetFromJsonAsync<Producto>($"/api/Productos/{Id}");
        //Conseguir las categorías
        _categorias = await Http.GetFromJsonAsync<List<Categoria>>("/api/Categorias");
    }
    private async Task Put()
    {
        await Http.PutAsJsonAsync<Producto>($"/api/Productos/{_producto.Id}", _producto);
        Navigation.NavigateTo("/productos/admin");
    }
    private void CambiarImagen(int id)
    {
        Navigation.NavigateTo($"/producto/edit/img/{id}");
    }
    private async Task OnFileChange(InputFileChangeEventArgs ev)
    {
        //get the file
        var file = ev.File;

        //read that file in a byte array
        var buffer = new byte[file.Size];
        await file.OpenReadStream(1512000).ReadAsync(buffer);

        //convert byte array to base 64 string
        _producto.Imagen = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }

}
