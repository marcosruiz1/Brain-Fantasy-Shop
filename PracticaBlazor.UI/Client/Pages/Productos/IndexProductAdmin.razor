@page "/productos/admin"
@using PracticaBlazor.UI.Client.Services.ComentarioService
@using PracticaBlazor.UI.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IComentarioService ComentarioService
@inject IToastService toastService


<AuthorizeView Roles="ROLE_ADMIN, ROLE_COMPLETO">
    <Authorized>

        <div class="container containerPers">

            @if (_productos == null)
            {
                <div id="app" class="d-flex justify-content-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else
            {
                <h1>INDEX ADMIN PRODUCTOS</h1>
                <div class="form-group">
                    <input class="form-control" type="text" placeholder="Filter..."
                       @bind="Filter"
                       @bind:event="oninput">
                </div>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Nombre</th>
                            <th>Categoria</th>
                            <th>Precio</th>
                            <th>Descripcion</th>
                            <th>Imagen</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var producto in _productos)
                        {
                            if (!IsVisible(producto))
                                continue;
                            <tr>
                                <td>@producto.Id.ToString()</td>
                                <td>@producto.Nombre</td>
                                <td>@producto.Categoria</td>
                                <td>@producto.Precio</td>
                                <td>@producto.Descripcion.Substring(0,40)...</td>
                                <td><img src="@producto.Imagen" style="width: 75px; height: 75px;"></td>
                                <td>
                                    <button class="btn btn-info"
                                    @onclick="(() => Edit(producto.Id))">
                                        Edit
                                    </button>
                                    <button class="delBoton btn-danger"
                                    @onclick="(() => Delete(producto.Id))">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div>
                    <button class="btn btn-success" @onclick="Create">Añadir productos</button>
                </div>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        @{
            Navigation.NavigateTo("/login");
        }
    </NotAuthorized>

</AuthorizeView>


@code {
    private List<Producto>? _productos;
    public string Filter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _productos = await Http.GetFromJsonAsync<List<Producto>>("/api/Productos");
    }

    private async Task Delete(int id)
    {
        await Http.DeleteAsync($"/api/Carritos/prod/{id}");
        await Http.DeleteAsync($"/api/Comentarios/prod/{id}");
        await ComentarioService.BorrarComentarioProducto(id);
        await Http.DeleteAsync($"/api/Productos/{id}");
        _productos = await Http.GetFromJsonAsync<List<Producto>>("/api/Productos");
        toastService.ShowSuccess("Producto eliminado");
        StateHasChanged();
    }
    private void Edit(int id)
    {
        Navigation.NavigateTo($"/producto/edit/{id}");
    }
    private void Create()
    {
        Navigation.NavigateTo("/producto/create");
    }
    public bool IsVisible(Producto producto)
    {
        if (string.IsNullOrEmpty(Filter))
            return true;

        if (producto.Nombre.Contains(Filter, StringComparison.OrdinalIgnoreCase))
            return true;


        return false;
    }

}
