@page "/producto/edit/img/{id:int}"
@using PracticaBlazor.UI.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<div class="container ">
<h3>Editar Imágen</h3>

@if (_producto == null)
{
    <div id="app" class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <EditForm Model="@_producto" OnValidSubmit="Put">
        <div class="form-group">
            <label>Imagen: </label>
            <InputFile OnChange="@OnFileChange" multiple="false" accept="images/jpeg" />
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Editar producto" />
        </div>
    </EditForm>
}
</div>
@code {
    [Parameter]
    public int Id { get; set; }
    Producto _producto = null;

    protected override async Task OnInitializedAsync()
    {
        _producto = await Http.GetFromJsonAsync<Producto>($"/api/Productos/{Id}");
    }

    private async Task Put()
    {
        await Http.PutAsJsonAsync<Producto>($"/api/Productos/{_producto.Id}", _producto);
        Navigation.NavigateTo($"/producto/edit/{Id}");
    }
    private async Task OnFileChange(InputFileChangeEventArgs ev)
    {
        //get the file
        var file = ev.File;

        //read that file in a byte array
        var buffer = new byte[file.Size];
        await file.OpenReadStream(1512000).ReadAsync(buffer);

        //convert byte array to base 64 string
        _producto.Imagen = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";
    }

}
